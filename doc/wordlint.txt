*wordlint.txt*		For Vim version 7.4		Last change: 2014 November 23

Wordlint.vim provides two ex commands as an interface with the `wordlint`
redundancy checking program.

============================================================================
0. Contents     									    				*wordlint-contents*

1. Installation 					|wordlint-installation|
2. Options							  |wordlint-options|
3. Commands 						  |wordlint-commands|

============================================================================
1. Installation     		 											*wordlint-installation*

Instllation of this plugin is precluded by the installation of the external
tool ``wordlint``, which may be found at https://github.com/gbgar/Wordlint
or may be installed through Hackage, via cabal: 
>
	cabal insall wordlint

Afterward, the vim interface may be installed.

- Using a plugin manager
>
		NeoBundle 'gbgar/wordlint.vim', 

- Manually

	Not recommended. Copy the repo's directory structure into ~/.vim/ folder.

============================================================================
2. Options    											  *wordlint-options*

																			*g:wordlint_opts*
g:wordlint_opts

	Default is ' '. Set this option to pass custom command line arguments to
	wordlint.  All linting options and the `-a` output argument are acceptable
	input. See `wordlint --help`, the wordlint man page, or the wordlint
  README for a full list of available options. For example:
>
					:let g:wordlint_opts = '-t line -d 20 --nopunct'
<
	will cause |:WordlintCheckBuffer| to perform a line-based lint, filtering
  punctuation from the list of potential matches, and return any matching 
	words that are within 20 lines of one-another.

																			*g:wordlint_hightlight*
g:wordlint_highlight

	If non-zero, highlight matches.  Default is '1'

																			*g:wordlint_custom_hightlight_group*
g:wordlint_custom_highlight_group


  Set the name of a custom syntax group for highlighting matches.
	For example:
>
				:highlight MyWordlintGroup ctermbg=yellow ctermfg=black
				:let g:wordlint_custom_highlight_group = "MyWordLintGroup"
<
	Default is 'Error'

NOTE: Remove highlighting with 
>
				:call clearmatches()
				:nnoremap <Leader>cm <Silent>:call clearmatches()
<
			Future improvements will revolve around some kind of real-time
			highlighting/movements between matches. Or, perhaps there already
		  exists a plugin that I have yet to find which does this for loclist.

============================================================================
3. Commands   													  	  *wordlint-commands*

Wordlint.vim provides two commands for interfacing with wordlint, one
targeting the entire buffer, and the other a selection. Both set the
|location-list| for the buffer, and both optionally set a custom highlight
for any matched words.

																						  *:WordlintCheckBuffer* 
:WordlintCheckBuffer									

				Runs `wordlint . |g:wordlint_opts|` on the current buffer, sets the
				|location-list|, and optionally highlights all matches.

																							*:WordlintCheckSelected*
:[range]WordlintCheckSelected
		
				The same as |:WordlintCheckBuffer|, but with an optional range.
				Default range is set for the entire buffer.

vim:tw=78:noet:ts=2:ft=help:norl:
