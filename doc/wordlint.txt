*wordlint.txt*		For Vim version 7.4		Last change: 2014 December 01

Wordlint.vim provides a compiler based on the `wordlint` redundancy checking
program, intended for use in prose writing. After loading, the `:Wordlint`
command becomes available to pass a set of user-provided default options to
`:make`.

============================================================================
0. Contents     									    				*wordlint-contents*

1. Installation 					|wordlint-installation|
2. Usage        					|wordlint-usage|
3. Commands 						  |wordlint-commands|
4. Options							  |wordlint-options|

============================================================================
1. Installation     		 											*wordlint-installation*

Instllation of this plugin is precluded by the installation of the external
tool ``wordlint``, which may be found at https://github.com/gbgar/Wordlint
or may be installed through Hackage, via cabal: 
>
  	cabal insall wordlint
<
Afterward, the vim interface may be installed.

- Using a plugin manager
>
		NeoBundle 'gbgar/wordlint.vim'
<
- Manually

	Not recommended. Copy the repo's directory structure into ~/.vim/ folder.

============================================================================
2. Usage            		 											*wordlint-usage*

Basic usage requires the user to set wordlint as the compiler:
>
	:compiler wordlint
<
Afterward, the `:make` command may be used, with additional arguments if desired.

All linting options and the `--all` output flag are acceptable arguments.  See
`wordlint --help`, the wordlint man page, or the wordlint README for a full
list of available options. 

NOTE: As the `wordlint` program is in an early stage, options are subject
			to change from time to time.

============================================================================
2.1 Set filetype autocommand

Optionally, this compiler may be associated with a filetype in your .vimrc:
>
	autocmd FileType pandoc,markdown compiler wordlint
<
============================================================================
3. Commands   													  	  *wordlint-commands*

Wordlint.vim provides one convenience command for interfacing with wordlint. 

																						  *:Wordlint* 
:Wordlint
				Wrapper around |:make| with user-defined defaults,
				set via `g:wordlint_opts`.

============================================================================
4. Options    											  *wordlint-options*

																			*g:wordlint_opts*
g:wordlint_opts

	Default is ' '. Set this option to pass custom command line arguments to
	wordlint. Argument rules are the same as those listed in |wordlint-usage|.

	For example:
>
					:let g:wordlint_opts = '-t line -d 20 --nopunct'
					:Wordlint
<
	is equivalent to
>
				 :make -t line -d 20
<
	and both will run `wordlint`, performing a line-based check, and returning
	any matching words that are greater than five characters (default) long and
	found within 20 lines of one-another.

vim:tw=78:noet:ts=2:ft=help:norl:
